<?php
/**
 * @author Martin Gamboa Vazquez
 * @version 1.0.0
 * @created 2022-05-14
 * @final En proceso
 *
 */
namespace tglobally\tg_nomina\controllers;

use config\generales;
use gamboamartin\errores\errores;
use gamboamartin\system\links_menu;
use JsonException;
use stdClass;
use PDO;

class controlador_adm_session extends \gamboamartin\controllers\controlador_adm_session {
    public bool $existe_msj = false;
    public string $include_menu = '';
    public string $mensaje_html = '';

    public array $secciones = array("nom_nomina", "nom_periodo", "nom_conf_factura", "nom_conf_nomina", "tg_tipo_servicio",
        "tg_manifiesto", "tg_manifiesto_periodo", "tg_tipo_provision", "tg_provision" , "tg_conf_provision" , "tg_layout",
        "tg_tipo_column", "tg_column", "nom_clasificacion", "tg_agrupador", "tg_conf_manifiesto",
        "tg_empleado_agrupado", "nom_conf_empleado", "em_empleado",'em_cuenta_bancaria','em_registro_patronal');
    public array $links_catalogos = array();

    public stdClass $links;
    public string $link_inicio = '';


    public function __construct(PDO $link, stdClass $paths_conf = new stdClass())
    {
        parent::__construct($link, $paths_conf);

        $this->titulo_pagina = "Inicio Sesion";
        $this->seccion_titulo = "Inicio";
        
        $this->links_catalogos["tg_layout"]["titulo"] = "Layout";
        $this->links_catalogos["tg_layout"]["subtitulo"] = "Catálogo";

        $this->links_catalogos["tg_tipo_column"]["titulo"] = "Tipo Column";
        $this->links_catalogos["tg_tipo_column"]["subtitulo"] = "Catálogo";

        $this->links_catalogos["tg_column"]["titulo"] = "Column";
        $this->links_catalogos["tg_column"]["subtitulo"] = "Catálogo";

        $this->links_catalogos["nom_clasificacion"]["titulo"] = "Clasificacion";
        $this->links_catalogos["nom_clasificacion"]["subtitulo"] = "Catálogo";

        $this->links_catalogos["tg_agrupador"]["titulo"] = "Agrupador";
        $this->links_catalogos["tg_agrupador"]["subtitulo"] = "Catálogo";

        $this->links_catalogos["tg_conf_manifiesto"]["titulo"] = "Conf. Manifiesto";
        $this->links_catalogos["tg_conf_manifiesto"]["subtitulo"] = "Catálogo";

        $this->links_catalogos["tg_empleado_agrupado"]["titulo"] = "Empleado Agrupado";
        $this->links_catalogos["tg_empleado_agrupado"]["subtitulo"] = "Catálogo";

        $this->links_catalogos["nom_conf_empleado"]["titulo"] = "Conf. Empleado";
        $this->links_catalogos["nom_conf_empleado"]["subtitulo"] = "Catálogo";

        $this->links_catalogos["em_empleado"]["titulo"] = "Empleados";
        $this->links_catalogos["em_empleado"]["subtitulo"] = "Catálogo";

        $this->links_catalogos["em_cuenta_bancaria"]["titulo"] = "Cuentas Bancarias";
        $this->links_catalogos["em_cuenta_bancaria"]["subtitulo"] = "Catálogo";

        $this->links_catalogos["em_registro_patronal"]["titulo"] = "Registro Patronal";
        $this->links_catalogos["em_registro_patronal"]["subtitulo"] = "Catálogo";

        $this->link_inicio = "./index.php?seccion=adm_session&accion=inicio&session_id=<$this->session_id";
    }


    /**
     * Funcion de controlador donde se ejecutaran siempre que haya un acceso denegado
     * @param bool $header Si header es true cualquier error se mostrara en el html y cortara la ejecucion del sistema
     *              En false retornara un array si hay error y un string con formato html
     * @param bool $ws Si ws es true retornara el resultado en formato de json
     * @return array vacio siempre
     */
    public function denegado(bool $header, bool $ws = false): array
    {

        return array();

    }

    /**
     * Funcion de controlador donde se ejecutaran los elementos necesarios para poder mostrar el inicio en
     *      session/inicio
     *
     * @param bool $aplica_template Si aplica template buscara el header de la base
     *              No recomendado para vistas ajustadas como esta
     * @param bool $header Si header es true cualquier error se mostrara en el html y cortara la ejecucion del sistema
     *              En false retornara un array si hay error y un string con formato html
     * @param bool $ws Si ws es true retornara el resultado en formato de json
     * @return string|array string = html array = error
     * @throws JsonException si hay error en forma ws
     */
    public function inicio(bool $aplica_template = false, bool $header = true, bool $ws = false): string|array
    {

        $template =  parent::inicio($aplica_template, false); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje:  'Error al generar template',data: $template, header: $header, ws: $ws);
        }

        $this->include_menu = (new generales())->path_base;
        $this->include_menu .= 'templates/inicio.php';
        $this->titulo_pagina = "Inicio";

        return $template;
    }

    /**
     * Funcion de controlador donde se ejecutaran los elementos necesarios para la asignacion de datos de logueo
     * @param bool $header Si header es true cualquier error se mostrara en el html y cortara la ejecucion del sistema
     *              En false retornara un array si hay error y un string con formato html
     * @param bool $ws Si ws es true retornara el resultado en formato de json
     * @param string $accion_header
     * @param string $seccion_header
     * @return array string = html array = error
     *
     */
    public function loguea(bool $header, bool $ws = false, string $accion_header = 'login', string $seccion_header = 'session'): array
    {
        $loguea = parent::loguea(header: true,accion_header:  $accion_header,
            seccion_header:  $seccion_header); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje:  'Error al loguear',data: $loguea, header: $header, ws: $ws);
        }
        return $loguea;
    }


    /**
     * Funcion de controlador donde se ejecutaran los elementos de session/login
     *
     * @param bool $header Si header es true cualquier error se mostrara en el html y cortara la ejecucion del sistema
     *              En false retornara un array si hay error y un string con formato html
     * @param bool $ws Si ws es true retornara el resultado en formato de json
     * @return string|array string = html array = error
     */
    public function login(bool $header = true, bool $ws = false): stdClass|array
    {
        $login = parent::login($header, $ws); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje:  'Error al generar template',data: $login, header: $header, ws: $ws);
        }

        $this->mensaje_html = '';
        if(isset($_GET['mensaje']) && $_GET['mensaje'] !==''){
            $mensaje = trim($_GET['mensaje']);
            if($mensaje !== ''){
                $this->mensaje_html = $mensaje;
                $this->existe_msj = true;
            }
        }

        $this->include_menu .= 'templates/login.php';

        return $login;

    }



}
